<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        +f//9/v///Pz///55////M////4f///+f///////
</value>
  </data>
</root>